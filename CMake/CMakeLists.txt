# Copyright Â© from 2022 to present, UNKNOWN STRYKER. All Rights Reserved.
CMAKE_MINIMUM_REQUIRED(VERSION 3.25.0...3.31.2)
PROJECT(SIMD-Memory-Algorithms
        VERSION 0.0.0
        DESCRIPTION "SIMD Memory Algorithms: memcpy, memmove, memzero")


IF(CMAKE_SYSTEM_NAME STREQUAL "Windows" AND TARGET_CPU_ARCHITECTURE STREQUAL "x86-64")
    ENABLE_LANGUAGE(ASM_MASM)


ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Windows" AND TARGET_CPU_ARCHITECTURE STREQUAL "arm64")
    ENABLE_LANGUAGE(ASM_MARMASM)


ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND TARGET_CPU_ARCHITECTURE STREQUAL "x86-64")
    ENABLE_LANGUAGE(ASM-ATT)

    ADD_LIBRARY(${CMAKE_PROJECT_NAME} STATIC
        ${CMAKE_CURRENT_SOURCE_DIR}/../Source/__x86_64_AVX_SSE_aligned_memcpy.asm
        ${CMAKE_CURRENT_SOURCE_DIR}/../Source/__x86_64_AVX_SSE_dest_aligned_memcpy.asm
        ${CMAKE_CURRENT_SOURCE_DIR}/../Source/__x86_64_AVX_SSE_source_aligned_memcpy.asm
        ${CMAKE_CURRENT_SOURCE_DIR}/../Source/__x86_64_AVX_SSE_unaligned_memcpy.asm
    )


ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Linux" AND TARGET_CPU_ARCHITECTURE STREQUAL "arm64")


ELSE()
    MESSAGE(FATAL_ERROR "System not selected.")

ENDIF()